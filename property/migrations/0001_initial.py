# Generated by Django 3.1 on 2021-07-07 07:11

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("user", "0003_agentdetail_full_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BasicDetails",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                (
                    "advertisement_type",
                    models.CharField(
                        choices=[("", "----"), ("R", "Rent"), ("S", "Sale")],
                        default="",
                        max_length=2,
                    ),
                ),
                ("publish", models.BooleanField(default=False)),
                ("views", models.PositiveIntegerField(default=0)),
                (
                    "listing_type",
                    models.CharField(
                        blank=True,
                        choices=[("Fr", "Free"), ("P", "Premium"), ("Fe", "Featured")],
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "membership_plan",
                    models.CharField(
                        blank=True,
                        choices=[("S", "Silver"), ("G", "Gold"), ("P", "Platinum")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "condition_type",
                    models.CharField(
                        blank=True,
                        choices=[("N", "New"), ("U", "Used")],
                        max_length=1,
                        null=True,
                    ),
                ),
                ("due_date", models.DateField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "admin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="admin_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "agent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agentdetail",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Basic Details",
                "ordering": ["-created_on"],
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                ("text", models.TextField(null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_comment_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Comment",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="Locality",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_locality_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Locality",
                "ordering": ["-created_on"],
            },
        ),
        migrations.CreateModel(
            name="SellPropertyDetails",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                (
                    "bhk_type",
                    models.CharField(
                        choices=[
                            ("1 RK", "1 RK"),
                            ("1 BHK", "1 BHK"),
                            ("2 BHK", "2 BHK"),
                            ("3 BHK", "3 BHK"),
                            ("4 BHK", "4 BHK"),
                            ("4+ BHK", "4+ BHK"),
                        ],
                        default="F",
                        max_length=20,
                    ),
                ),
                (
                    "total_floors",
                    models.CharField(
                        choices=[
                            ("G", "Ground"),
                            ("1", "1"),
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                            ("6", "6"),
                            ("7", "7"),
                            ("8", "8"),
                            ("9", "9"),
                            ("10", "10"),
                            ("11", "11"),
                            ("12", "12"),
                            ("13", "13"),
                            ("14", "14"),
                            ("15", "15"),
                            ("16", "16"),
                            ("17", "17"),
                            ("18", "18"),
                            ("19", "19"),
                            ("20", "20"),
                        ],
                        default="G",
                        max_length=2,
                    ),
                ),
                (
                    "property_age",
                    models.CharField(
                        choices=[
                            ("U", "Under Construction"),
                            ("L", "Less than a year"),
                            ("1", "1 to 3 year"),
                            ("3", "3 to 5 year"),
                            ("5", "5 to 10 year"),
                            ("M", "More than 10 year"),
                        ],
                        default="U",
                        max_length=1,
                    ),
                ),
                (
                    "built_up_area",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "property_size",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "facing_direction",
                    models.CharField(
                        choices=[
                            ("E", "EAST"),
                            ("W", "WEST"),
                            ("N", "North"),
                            ("S", "South"),
                            ("NE", "North-East"),
                            ("SE", "South-East"),
                            ("NW", "North-West"),
                            ("SW", "South-West"),
                            ("D", "Don't Know"),
                        ],
                        max_length=2,
                    ),
                ),
                (
                    "basic_details",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sell_property_details",
                        to="property.basicdetails",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_sellpropertydetails_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "SellPropertyDetails",
                "ordering": ["-created_on"],
            },
        ),
        migrations.CreateModel(
            name="ResaleDetails",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                (
                    "expected_price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "price",
                    models.CharField(
                        choices=[("N", "Negotiable"), ("F", "Fixed")],
                        default="N",
                        max_length=1,
                    ),
                ),
                ("available_from", models.DateField()),
                (
                    "kitchen_type",
                    models.CharField(
                        choices=[
                            ("F", "Fully furnished"),
                            ("S", "Semi Furnishing"),
                            ("U", "Unfurnished"),
                        ],
                        default="F",
                        max_length=1,
                    ),
                ),
                (
                    "furnishing",
                    models.CharField(
                        choices=[
                            ("F", "Fully Furnishing"),
                            ("S", "Semi Furnishing"),
                            ("U", "Unfurnishing"),
                        ],
                        default="F",
                        max_length=1,
                    ),
                ),
                (
                    "no_of_parking",
                    models.CharField(
                        choices=[
                            ("N", "None"),
                            ("M", "Motorbike"),
                            ("C", "Car"),
                            ("B", "Both"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "construction_type",
                    models.CharField(
                        choices=[("C", "Completed"), ("N", "Not Completed")],
                        default="",
                        max_length=2,
                    ),
                ),
                (
                    "pillar_size_width1",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "pillar_size_width2",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("description", models.TextField()),
                (
                    "basic_details",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resale_details",
                        to="property.basicdetails",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_resaledetails_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "ResaleDetails",
                "ordering": ["-created_on"],
            },
        ),
        migrations.CreateModel(
            name="Reply",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                ("reply", models.TextField()),
                (
                    "comment",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reply",
                        to="property.comment",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_reply_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "reply_madeby",
                    models.ForeignKey(
                        blank=True,
                        help_text="Reply made by user",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reply_madeby",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reply_madeto",
                    models.ForeignKey(
                        blank=True,
                        help_text="Reply done to specific user comment",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reply_madeto",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Reply",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="RentPropertyDetails",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                (
                    "bhk_type",
                    models.CharField(
                        choices=[
                            ("1 RK", "1 RK"),
                            ("1 BHK", "1 BHK"),
                            ("2 BHK", "2 BHK"),
                            ("3 BHK", "3 BHK"),
                            ("4 BHK", "4 BHK"),
                            ("4+ BHK", "4+ BHK"),
                        ],
                        default="F",
                        max_length=20,
                    ),
                ),
                ("floor_number", models.CharField(max_length=40)),
                ("total_floors", models.CharField(max_length=40)),
                ("property_age", models.CharField(max_length=40)),
                (
                    "facing_direction",
                    models.CharField(
                        choices=[
                            ("E", "EAST"),
                            ("W", "WEST"),
                            ("N", "North"),
                            ("S", "South"),
                            ("NE", "North-East"),
                            ("SE", "South-East"),
                            ("NW", "North-West"),
                            ("SW", "South-West"),
                            ("D", "Don't Know"),
                        ],
                        default="E",
                        max_length=2,
                    ),
                ),
                ("property_size", models.FloatField(default=0.0)),
                (
                    "basic_details",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rent_property",
                        to="property.basicdetails",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_rentpropertydetails_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Rent Property Details",
                "db_table": "rent_property_details",
                "ordering": ["-created_on"],
            },
        ),
        migrations.CreateModel(
            name="RentalDetails",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                (
                    "expected_rent",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "expected_deposit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "price",
                    models.CharField(
                        choices=[("N", "Negotiable"), ("F", "Fixed")],
                        default="N",
                        max_length=1,
                    ),
                ),
                ("available_from", models.DateField()),
                (
                    "furnishing",
                    models.CharField(
                        choices=[
                            ("F", "Fully Furnishing"),
                            ("S", "Semi Furnishing"),
                            ("U", "Unfurnishing"),
                        ],
                        default="F",
                        max_length=1,
                    ),
                ),
                (
                    "no_of_parking",
                    models.CharField(
                        choices=[
                            ("N", "None"),
                            ("M", "Motorbike"),
                            ("C", "Car"),
                            ("B", "Both"),
                        ],
                        max_length=1,
                    ),
                ),
                ("description", models.TextField()),
                (
                    "basic_details",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rental_details",
                        to="property.basicdetails",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_rentaldetails_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Rental Info",
                "db_table": "property_rental",
                "ordering": ["-created_on"],
            },
        ),
        migrations.CreateModel(
            name="PropertyTypes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_propertytypes_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "PropertyTypes",
                "ordering": ["-created_on"],
            },
        ),
        migrations.CreateModel(
            name="PropertyRequest",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=32, null=True)),
                ("phone", models.CharField(max_length=15)),
                ("email", models.EmailField(max_length=254)),
                (
                    "request_type",
                    models.CharField(
                        choices=[("B", "Buy"), ("R", "Rent"), ("S", "Sell")],
                        max_length=1,
                    ),
                ),
                (
                    "property_type",
                    models.CharField(
                        choices=[
                            ("B", "House/Bungalow"),
                            ("F", "Flat & Apartment"),
                            ("C", "Commercial Property"),
                            ("L", "land"),
                            ("A", "Agricultural Land"),
                            ("O", "Office Space"),
                            ("S", "Shutter & Shop Space"),
                            ("R", "Restaurant for sale"),
                            ("H", "House in a Colony"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "urgent",
                    models.CharField(
                        choices=[
                            ("V", "Very Urgent"),
                            ("W", "Within a few days"),
                            ("M", "Within a month"),
                            ("I", "In few months time"),
                        ],
                        max_length=1,
                    ),
                ),
                ("place", models.TextField()),
                ("price_range", models.TextField()),
                (
                    "size",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=10),
                ),
                ("description", models.TextField()),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_propertyrequest_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Property Request",
                "db_table": "property_request",
            },
        ),
        migrations.CreateModel(
            name="PropertyDiscussionBoard",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                (
                    "discussion",
                    models.CharField(
                        choices=[
                            ("Q", "Query"),
                            ("R", "Review"),
                            ("S", "Suggestion"),
                            ("C", "Complaint"),
                        ],
                        max_length=1,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=32, null=True)),
                (
                    "tags",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=32),
                        blank=True,
                        size=None,
                    ),
                ),
                ("comments", models.TextField()),
                (
                    "basic_details",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="discussion_board",
                        to="property.basicdetails",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_propertydiscussionboard_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="discussion_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Property Discussion Board",
                "db_table": "property_discussionboard",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="PropertyCategories",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_propertycategories_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "PropertyCategories",
                "ordering": ["-created_on"],
            },
        ),
        migrations.CreateModel(
            name="LocalityDetails",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                ("street", models.TextField()),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                (
                    "basic_details",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location",
                        to="property.basicdetails",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_localitydetails_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
                (
                    "locality",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="location",
                        to="property.locality",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Property Location",
                "db_table": "property_location",
                "ordering": ["-created_on"],
            },
        ),
        migrations.CreateModel(
            name="Gallery",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=100, null=True)),
                ("image", models.ImageField(upload_to="property/gallery")),
                (
                    "basic_details",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gallery",
                        to="property.basicdetails",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_gallery_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Gallery",
                "db_table": "Gallery",
            },
        ),
        migrations.CreateModel(
            name="FieldVisit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("email", models.CharField(max_length=16)),
                ("phone", models.CharField(max_length=16)),
                (
                    "basic_details",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="field_visit",
                        to="property.basicdetails",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_fieldvisit_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Field Visit",
                "db_table": "property_field_visit",
                "ordering": ["-name"],
            },
        ),
        migrations.CreateModel(
            name="ContactAgent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=25, null=True)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(max_length=15)),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contact_agent",
                        to="user.agentdetail",
                    ),
                ),
                (
                    "basic_details",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contact_agent",
                        to="property.basicdetails",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Contact Agent",
                "ordering": ["-id"],
            },
        ),
        migrations.AddField(
            model_name="comment",
            name="discussion_board",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="property.propertydiscussionboard",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="comment_user",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_city_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "City",
                "ordering": ["-created_on"],
            },
        ),
        migrations.AddField(
            model_name="basicdetails",
            name="city",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="city_property",
                to="property.city",
            ),
        ),
        migrations.AddField(
            model_name="basicdetails",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="property_basicdetails_created",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AddField(
            model_name="basicdetails",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="userprofile",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="basicdetails",
            name="property_categories",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="property_info",
                to="property.propertycategories",
            ),
        ),
        migrations.AddField(
            model_name="basicdetails",
            name="property_types",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="property_info",
                to="property.propertytypes",
            ),
        ),
        migrations.AddField(
            model_name="basicdetails",
            name="staff",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="staffdetail",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Amenities",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_on",
                    models.DateTimeField(
                        auto_now_add=True, db_index=True, verbose_name="Created at"
                    ),
                ),
                (
                    "modified_on",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Last modified at"
                    ),
                ),
                ("total_no_bathrooms", models.IntegerField(default=0)),
                ("water_supply", models.BooleanField(default=False)),
                ("swimming_pool", models.BooleanField(default=False)),
                ("security", models.BooleanField(default=False)),
                ("gym", models.BooleanField(default=False)),
                ("lift", models.BooleanField(default=False)),
                ("title", models.CharField(blank=True, max_length=100, null=True)),
                ("image", models.ImageField(upload_to="sale/amenities")),
                (
                    "basic_details",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="amenities",
                        to="property.basicdetails",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="property_amenities_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created by",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Amenities",
                "db_table": "property_amenities",
            },
        ),
    ]
